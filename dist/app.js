!function(Q){var F={};function B(U){if(F[U])return F[U].exports;var n=F[U]={i:U,l:!1,exports:{}};return Q[U].call(n.exports,n,n.exports,B),n.l=!0,n.exports}B.m=Q,B.c=F,B.d=function(Q,F,U){B.o(Q,F)||Object.defineProperty(Q,F,{configurable:!1,enumerable:!0,get:U})},B.r=function(Q){Object.defineProperty(Q,"__esModule",{value:!0})},B.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return B.d(F,"a",F),F},B.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},B.p="dist/",B(B.s=0)}([function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// CONCATENATED MODULE: ./src/randomName.js\nconst firstName = ['Vicious', 'Terrible', 'Huge', 'Smelly', 'Snotty', 'Stuped', 'Fierce', 'Poisonous', 'Thorny', 'Toothy'];\n\nconst secondName = ['Ogre', 'Gnome', 'Elf', 'Giant', 'Troll', 'Zombie', 'Orc', 'Trent', 'Centaur', 'Spirit'];\n\nconst thirdName = ['Pharaoph', 'Egor Kreed', 'Drake', 'Lil Pump', 'Face', 'Eljey', 'Kizaru', 'Obladaet', 'Poroshenko', 'Tramp'];\n\nfunction randomName(arr) {\n    return arr[Math.floor(Math.random() * arr.length)];\n}\n\nfunction getMonsterName() {\n    return `${randomName(firstName)} ${randomName(secondName)} ${randomName(thirdName)}`;\n}\n// CONCATENATED MODULE: ./src/ariphmeticTask.js\nconst numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\nconst operators = ['-', '+', '*'];\nfunction randomOperation(arr, capacity) {\n    let number = [];\n    for (let i = 0; i < capacity; i++) {\n        number[i] = arr[Math.floor(Math.random() * arr.length)];\n    }\n    if (parseInt(number[0])) return number.join('');\n    return number[0];\n}\nfunction getOperation(capacity) {\n    let firstNumber = randomOperation(numbers, capacity);\n    let secondNumber = randomOperation(numbers, capacity);\n    let operation = randomOperation(operators, capacity);\n    if (firstNumber < secondNumber && operation === '-') {\n        let i = firstNumber;\n        firstNumber = secondNumber;\n        secondNumber = i;\n    }\n    return `${firstNumber} ${operation} ${secondNumber}`;\n}\n// CONCATENATED MODULE: ./src/monsterGeneration.js\nfunction monsterRender(monster) {\n    let monsterHeaders = [\"img/monster1.png\", \"img/monster2.png\", \"img/monster3.png\"];\n    let randomHead = monsterHeaders[Math.floor(Math.random() * monsterHeaders.length)];\n    monster.style.position = \"absolute\";\n    monster.style.zIndex = \"1000\";\n    monster.style.marginLeft = \"1450px\";\n    monster.style.marginTop = \"380px\";\n    monster.style.width = '60px';\n    monster.style.height = '72px';\n    monster.style.background = `url(${randomHead})`;\n    monster.style.backgroundSize = '100%';\n}\n\n/* harmony default export */ var monsterGeneration = (monsterRender);\n// CONCATENATED MODULE: ./src/index.js\n\n\n\nconst riddles = {\n    \"mouse\": `I live in the house.\n    I eat everything.\n    I am small and grey.\n    Cats eat me.`,\n\n    \"pig\": `I oink.\n    I give you bacon.\n    I like mud and dirt.\n    I am pink.`,\n\n    \"cat\": `I am a pet.\n    I like mice.\n    I have nine lives.\n    I purr and meow.`,\n\n    \"dog\": `I’m a pet that has four legs\n    And a tail at the end\n    You might hear me barking\n    And I’m known as man’s best friend.`,\n\n    \"rain\": `I am asked to come,\n    I am waited for;\n    But I make you hide\n    When I knock at the door.`,\n\n    \"frost\": `Without hands it can paint,\n    Without teeth it can bite.`,\n\n    \"watermelon\": `I am one color outside.\n    I am another color inside.\n    I grow in the summer.\n    I am sweet.\n    You cannot eat my outside.\n    My skin has stripes.`\n};\n\nconst keys = Object.keys(riddles);\n\nfunction randomRiddles() {\n    return riddles[keys[Math.floor(Math.random() * keys.length)]];\n}\n\nfunction getKeyByValue(obj, value) {\n    for (let prop in obj) {\n        if (obj.hasOwnProperty(prop)) {\n            if (obj[prop] === value) return prop;\n        }\n    }\n}\n\n// The main game loop\nlet beginGame = true;\nlet users = 0;\nlet score = 0;\nlet windowName;\nlet nameArea;\nlet enteredNameYet = false;\nlet startMenu = document.createElement('div');\nstartMenu.style.width = 1900 + 'px';\nstartMenu.style.height = 930 + 'px';\nstartMenu.align = 'center';\nstartMenu.style.background = \"url(img/fon_lenty_radiaciya_opasnost_stena_18526_1280x1280[1].jpg)\";\nstartMenu.style.backgroundSize = \"100%\";\n\nlet playButton = document.createElement('button');\nplayButton.innerText = \"Play\";\nplayButton.style.backgroundColor = \"yellow\";\nplayButton.style.width = 200 + 'px';\nplayButton.style.height = 90 + 'px';\nstartMenu.appendChild(playButton);\nlet scoreButton = document.createElement('button');\nscoreButton.innerText = \"Score\";\nscoreButton.style.backgroundColor = \"yellow\";\nscoreButton.style.width = 200 + 'px';\nscoreButton.style.height = 90 + 'px';\nstartMenu.appendChild(scoreButton);\nlet screenButton = document.createElement('button');\nscreenButton.innerText = \"A screenshot of gameplay\";\nscreenButton.style.backgroundColor = \"yellow\";\nscreenButton.style.width = 200 + 'px';\nscreenButton.style.height = 90 + 'px';\nstartMenu.appendChild(screenButton);\ndocument.body.appendChild(startMenu);\n\nfunction init() {\n    document.write(`<object width=\"0\" height=\"0\" align=\"center\" id = \"mainaudio\">\n<param name=\"movie\" value=\"audio/BGsound.mp3\">\n<embed src=\"audio/BGsound.mp3\"\nautostart=\"true\"\nwidth=\"0\"\nheight=\"0\"\nalign=\"center\"\ntype=\"audio/mid\"\npluginspage=\"http://www.macromedia.com/go/getflashplayer\">\n</object>`);\n\n    scoreButton.addEventListener('click', function () {\n        let additionalWindow = document.createElement('div');\n        additionalWindow.id = 'additionalWindow';\n        additionalWindow.style.position = 'absolute';\n        additionalWindow.style.width = 1900 + 'px';\n        additionalWindow.style.height = 930 + 'px';\n        screenButton.style.display = 'none';\n        playButton.style.display = 'none';\n        scoreButton.style.display = 'none';\n        startMenu.style.position = 'absolute';\n        if (users) {\n            let scoreTable = document.createElement('table');\n            let trName = document.createElement('tr');\n            let tdName = document.createElement('td');\n            tdName.innerText = 'Name';\n            trName.appendChild(tdName);\n            let tdScore = document.createElement('td');\n            tdScore.innerText = 'Score';\n            trName.appendChild(tdScore);\n            scoreTable.appendChild(trName);\n            for (let i = 0; i < users; i++) {\n                let trToTh = document.createElement('tr');\n                let tdToName = document.createElement('td');\n                tdToName.innerText = nameArea.value;\n                trToTh.appendChild(tdToName);\n                let tdToScore = document.createElement('td');\n                tdToScore.innerText = score;\n                trToTh.appendChild(tdToScore);\n                scoreTable.appendChild(trToTh);\n            }\n            scoreTable.style.position = 'absolute';\n            scoreTable.style.zIndex = '1000';\n            additionalWindow.style.display = 'block';\n            additionalWindow.appendChild(scoreTable);\n        }\n        document.body.appendChild(additionalWindow);\n        createReturnButton();\n    });\n    startMenu.style.display = 'block';\n    screenButton.addEventListener('click', function () {\n        let additionalWindow = document.createElement('div');\n        additionalWindow.id = 'additionalWindow';\n        additionalWindow.style.position = 'absolute';\n        additionalWindow.style.width = 1900 + 'px';\n        additionalWindow.style.height = 930 + 'px';\n        additionalWindow.style.top = 0;\n        screenButton.style.display = 'none';\n        playButton.style.display = 'none';\n        scoreButton.style.display = 'none';\n        startMenu.style.position = 'absolute';\n        let imageGameplay = document.createElement('img');\n        imageGameplay.src = 'img/Gameplay.jpg';\n        imageGameplay.style.position = 'absolute';\n        imageGameplay.style.zIndex = '1000';\n        imageGameplay.style.align = 'center';\n        additionalWindow.style.display = 'block';\n        additionalWindow.appendChild(imageGameplay);\n        document.body.appendChild(additionalWindow);\n        createReturnButton();\n    });\n    playButton.addEventListener('click', function () {\n        startMenu.style.display = 'none';\n        document.getElementById('mainaudio').setAttribute('hidden', 'true');\n        enterName();\n    });\n}\nfunction startTheGame() {\n    if (beginGame === true) init();\n}\nstartTheGame();\n\nlet hpGg = 201;\nlet src_hpMonster = hpGg;\n\nfunction createReturnButton() {\n    let ReturnButton = document.createElement('button');\n    ReturnButton.innerHTML = \"&#9668\";\n    ReturnButton.style.backgroundColor = \"yellow\";\n    ReturnButton.style.width = 50 + 'px';\n    ReturnButton.style.height = 25 + 'px';\n    ReturnButton.style.position = 'absolute';\n    ReturnButton.style.zIndex = '1000';\n    ReturnButton.addEventListener('click', function () {\n        ReturnButton.remove();\n        document.getElementById('additionalWindow').remove();\n        screenButton.style.display = 'inline-block';\n        playButton.style.display = 'inline-block';\n        scoreButton.style.display = 'inline-block';\n    });\n    document.body.appendChild(ReturnButton);\n}\n\nfunction toRun() {\n    let globalPlayWindow = document.createElement('div');\n    globalPlayWindow.id = 'globalPlayWindow';\n    let playInGame = document.createElement('div');\n    playInGame.style.marginTop = '100px';\n    playInGame.style.marginLeft = '300px';\n    playInGame.style.width = '1400px';\n    playInGame.style.height = '700px';\n    playInGame.style.background = \"url(img/terrain.png)\";\n    playInGame.style.backgroundSize = \"100%\";\n    playInGame.style.position = \"absolute\";\n    let gg = document.createElement('div');\n    let monster = document.createElement('div');\n    let spellBook = document.createElement('button');\n    globalPlayWindow.appendChild(playInGame);\n    globalPlayWindow.appendChild(gg);\n    globalPlayWindow.appendChild(spellBook);\n    globalPlayWindow.appendChild(monster);\n    document.body.appendChild(globalPlayWindow);\n    ggRender(gg);\n    spellBookButtonRender(spellBook);\n    monsterGeneration(monster);\n    interfaceGgRender(hpGg);\n    interfaceMonsterRender(src_hpMonster);\n    spellBook.addEventListener('click', function () {\n        spellBook.disabled = true;\n        spellBookRender();\n    });\n}\n\nfunction ggRender(gg) {\n    gg.style.position = \"absolute\";\n    gg.style.zIndex = \"1000\";\n    gg.style.marginLeft = \"350px\";\n    gg.style.marginTop = \"400px\";\n    gg.style.width = '175px';\n    gg.style.height = '160px';\n    gg.style.background = \"url(img/gg.png)\";\n    gg.style.backgroundSize = '100%';\n}\n\nfunction interfaceGgRender(hpGg) {\n    let hp = document.createElement('div');\n    hp.style.marginTop = '150px';\n    hp.style.marginLeft = '330px';\n    hp.id = 'gghp';\n    hp.style.width = hpGg + 'px';\n    hp.style.height = '20px';\n    hp.style.background = \"repeating-linear-gradient(-45deg,#606dbc,#606dbc 10px,#465298 10px,#465298 20px)\";\n    hp.style.zIndex = '1000';\n    hp.style.display = \"inline-block\";\n    hp.style.position = \"absolute\";\n    document.getElementById('globalPlayWindow').appendChild(hp);\n    let nameGg = document.createElement('div');\n    nameGg.style.marginTop = '70px';\n    nameGg.style.marginLeft = '350px';\n    nameGg.style.width = '300px';\n    nameGg.style.height = '30px';\n    nameGg.style.zIndex = '1000';\n    nameGg.style.display = \"inline-block\";\n    nameGg.style.position = \"absolute\";\n    nameGg.id = 'namegg';\n    let pName = document.createElement('p');\n    pName.innerText = nameArea.value;\n    pName.style.color = 'white';\n    pName.style.fontSize = '30px';\n    pName.style.fontFamily = 'matura mt script capitals';\n    nameGg.appendChild(pName);\n    document.getElementById('globalPlayWindow').appendChild(nameGg);\n}\n\nfunction interfaceMonsterRender(hpMonster) {\n    let hp = document.createElement('div');\n    hp.style.marginTop = '150px';\n    hp.id = 'monsterhp';\n    hp.style.marginLeft = '1370px';\n    hp.style.width = hpMonster + 'px';\n    hp.style.height = '20px';\n    hp.style.background = \"repeating-linear-gradient(45deg,#606dbc,#606dbc 10px,#465298 10px,#465298 20px)\";\n    hp.style.zIndex = '1000';\n    hp.style.display = \"inline-block\";\n    hp.style.position = \"absolute\";\n    document.getElementById('globalPlayWindow').appendChild(hp);\n    let nameMonster = document.createElement('div');\n    nameMonster.style.marginTop = '70px';\n    nameMonster.style.marginLeft = '1270px';\n    nameMonster.style.width = '400px';\n    nameMonster.style.height = '30px';\n    nameMonster.style.zIndex = '1000';\n    nameMonster.style.display = \"inline-block\";\n    nameMonster.style.position = \"absolute\";\n    nameMonster.id = 'namemonster';\n    let pName = document.createElement('p');\n    pName.innerText = getMonsterName();\n    pName.style.color = 'white';\n    pName.style.fontSize = '30px';\n    pName.style.fontFamily = 'matura mt script capitals';\n    nameMonster.appendChild(pName);\n    document.getElementById('globalPlayWindow').appendChild(nameMonster);\n}\n\nfunction spellBookButtonRender(spellBook) {\n    spellBook.innerText = \"Spellbook\";\n    spellBook.style.marginLeft = \"940px\";\n    spellBook.style.marginTop = '130px';\n    spellBook.style.position = \"absolute\";\n    spellBook.style.zIndex = \"1010\";\n    spellBook.id = 'spellbutton';\n}\n\nfunction spellBookRender() {\n    let spellBookMain = document.createElement('div');\n    spellBookMain.style.marginTop = '20px';\n    spellBookMain.style.marginLeft = '450px';\n    spellBookMain.style.zIndex = \"1000\";\n    spellBookMain.style.width = '1050px';\n    spellBookMain.style.height = '800px';\n    spellBookMain.style.background = \"url(img/spellbook.png)\";\n    spellBookMain.style.backgroundSize = \"100%\";\n    spellBookMain.style.position = \"absolute\";\n    spellBookMain.id = 'spellbook';\n    let pToChoose = document.createElement('p');\n    pToChoose.innerText = 'Please select a spell';\n    pToChoose.style.align = 'center';\n    pToChoose.style.display = 'block';\n    pToChoose.style.paddingTop = '180px';\n    pToChoose.style.paddingLeft = '225px';\n    pToChoose.style.fontSize = '40px';\n    pToChoose.style.fontFamily = 'COMMERCIALSCRIPT BT';\n    pToChoose.style.color = '#0000ff';\n    spellBookMain.appendChild(pToChoose);\n    let ariphmeticButton = document.createElement('button');\n    ariphmeticButton.innerText = \"Solve the example\";\n    ariphmeticButton.style.display = 'inline-block';\n    ariphmeticButton.style.backgroundColor = \"yellow\";\n    ariphmeticButton.style.width = 200 + 'px';\n    ariphmeticButton.style.height = 90 + 'px';\n    ariphmeticButton.style.marginLeft = '250px';\n    ariphmeticButton.addEventListener('click', function () {\n        taskGeneration();\n        spellBookMain.style.display = 'none';\n    });\n    spellBookMain.appendChild(ariphmeticButton);\n    let puzzleButton = document.createElement('button');\n    puzzleButton.innerText = \"Guess the puzzle\";\n    puzzleButton.style.display = 'inline-block';\n    puzzleButton.style.backgroundColor = \"yellow\";\n    puzzleButton.style.width = 200 + 'px';\n    puzzleButton.style.height = 90 + 'px';\n    puzzleButton.style.marginLeft = '100px';\n    puzzleButton.addEventListener('click', function () {\n        riddlesGeneration();\n        spellBookMain.style.display = 'none';\n    });\n    spellBookMain.appendChild(puzzleButton);\n    document.getElementById('globalPlayWindow').appendChild(spellBookMain);\n}\n\nlet numberTask;\nlet capacity = 1;\n\nfunction taskGeneration() {\n    let taskWindow = document.createElement('div');\n    taskWindow.style.display = 'none';\n    taskWindow.style.zIndex = '1';\n    taskWindow.style.bottom = '0';\n    taskWindow.style.right = '0';\n    taskWindow.style.left = '0';\n    taskWindow.style.top = '0';\n    taskWindow.style.position = 'absolute';\n    taskWindow.style.height = '400px';\n    taskWindow.style.width = '512px';\n    taskWindow.style.margin = 'auto';\n    taskWindow.style.backgroundColor = 'black';\n    taskWindow.style.opacity = '.5';\n    taskWindow.style.color = 'white';\n    taskWindow.style.textAlign = 'center';\n    taskWindow.style.display = 'block';\n    let enterH2 = document.createElement('h2');\n    enterH2.style.fontSize = '3em';\n    enterH2.style.fontFamily = 'sans-serif';\n    enterH2.innerText = \"Write the solution in an empty field\";\n    let task = document.createElement('h3');\n    task.style.fontFamily = 'sans-serif';\n    numberTask = getOperation(capacity);\n    task.innerText = numberTask;\n    let solutionArea = document.createElement('textarea');\n    solutionArea.setAttribute(\"required\", true);\n    let enterButton = document.createElement('button');\n    enterButton.innerText = \"Enter\";\n    enterButton.style.fontSize = '1.5em';\n    taskWindow.appendChild(enterH2);\n    taskWindow.appendChild(task);\n    taskWindow.appendChild(solutionArea);\n    taskWindow.appendChild(enterButton);\n    document.getElementById('globalPlayWindow').appendChild(taskWindow);\n    enterButton.addEventListener('click', function () {\n        if (solutionArea.value.match(/\\D/g) || !solutionArea.value.match(/\\d/)) {\n            alert(\"Please enter correctly you solution to continue!\");\n        } else {\n            check(parseInt(solutionArea.value));\n            taskWindow.style.display = 'none';\n            document.getElementById('spellbook').remove();\n        }\n    });\n}\n\nfunction riddlesGeneration() {\n    let taskWindow = document.createElement('div');\n    taskWindow.style.display = 'none';\n    taskWindow.style.zIndex = '1';\n    taskWindow.style.bottom = '0';\n    taskWindow.style.right = '0';\n    taskWindow.style.left = '0';\n    taskWindow.style.top = '0';\n    taskWindow.style.position = 'absolute';\n    taskWindow.style.height = '400px';\n    taskWindow.style.width = '512px';\n    taskWindow.style.margin = 'auto';\n    taskWindow.style.backgroundColor = 'black';\n    taskWindow.style.opacity = '.5';\n    taskWindow.style.color = 'white';\n    taskWindow.style.textAlign = 'center';\n    taskWindow.style.display = 'block';\n    let enterH2 = document.createElement('h2');\n    enterH2.style.fontSize = '3em';\n    enterH2.style.fontFamily = 'sans-serif';\n    enterH2.innerText = \"Write the solution in small letters in an empty field\";\n    let task = document.createElement('h3');\n    task.style.fontFamily = 'sans-serif';\n    numberTask = randomRiddles();\n    task.innerText = String(numberTask);\n    let solutionArea = document.createElement('textarea');\n    solutionArea.setAttribute(\"required\", true);\n    let enterButton = document.createElement('button');\n    enterButton.innerText = \"Enter\";\n    enterButton.style.fontSize = '1.5em';\n    taskWindow.appendChild(enterH2);\n    taskWindow.appendChild(task);\n    taskWindow.appendChild(solutionArea);\n    taskWindow.appendChild(enterButton);\n    document.getElementById('globalPlayWindow').appendChild(taskWindow);\n    enterButton.addEventListener('click', function () {\n        checkSolutionRiddle(solutionArea.value);\n        taskWindow.style.display = 'none';\n        document.getElementById('spellbook').remove();\n    });\n}\n\nfunction check(solution) {\n    Math.round(solution);\n    let taskArr = numberTask.split(' ');\n    let firstNumber = Math.round(parseInt(taskArr[0]));\n    let secondNumber = Math.round(parseInt(taskArr[2]));\n    let trueAnswer = 0;\n    if (taskArr[1] == '+') {\n        trueAnswer = firstNumber + secondNumber;\n    } else if (taskArr[1] == '-') {\n        trueAnswer = firstNumber - secondNumber;\n    } else if (taskArr[1] == '*') {\n        trueAnswer = firstNumber * secondNumber;\n    }\n    if (solution === trueAnswer) {\n        faerbolRender();\n    } else if (solution != trueAnswer) {\n        monsterFaerbolRender();\n    }\n}\n\nfunction checkSolutionRiddle(solution) {\n    if (getKeyByValue(riddles, numberTask) == solution) {\n        faerbolRender();\n    } else if (getKeyByValue(riddles, numberTask) != solution) {\n        monsterFaerbolRender();\n    }\n}\n\nfunction faerbolRender() {\n    let faerbol = document.createElement('img');\n    faerbol.src = 'img/faerbol.gif';\n    faerbol.style.width = '160px';\n    faerbol.style.height = '70px';\n    faerbol.style.position = 'absolute';\n    faerbol.style.zIndex = '1000';\n    faerbol.style.marginLeft = '410px';\n    faerbol.style.marginTop = '458px';\n    document.getElementById('globalPlayWindow').appendChild(faerbol);\n    $(faerbol).animate({ left: \"+=800\" }, 2000);\n    $(faerbol).queue(function () {\n        $(this).hide();\n        $(this).dequeue();\n    });\n    $(faerbol).queue(function () {\n        src_hpMonster -= 67;\n        document.getElementById('monsterhp').style.width = src_hpMonster + 'px';\n        if (src_hpMonster == 0) {\n            endWindow();\n        } else {\n            document.getElementById('spellbutton').disabled = false;\n        }\n        $(this).dequeue();\n    });\n    $(faerbol).queue(function () {\n        faerbol.remove();\n        $(this).dequeue();\n    });\n}\n\nfunction monsterFaerbolRender() {\n    let faerbol = document.createElement('img');\n    faerbol.src = 'img/monsterfaerbol1.gif';\n    faerbol.style.width = '160px';\n    faerbol.style.height = '70px';\n    faerbol.style.position = 'absolute';\n    faerbol.style.zIndex = '1000';\n    faerbol.style.marginLeft = '1250px';\n    faerbol.style.marginTop = '458px';\n    document.getElementById('globalPlayWindow').appendChild(faerbol);\n    $(faerbol).animate({ left: \"-=815\" }, 2000);\n    $(faerbol).queue(function () {\n        $(this).hide();\n        $(this).dequeue();\n    });\n    $(faerbol).queue(function () {\n        hpGg -= 67;\n        document.getElementById('gghp').style.width = hpGg + 'px';\n        if (hpGg == 0) {\n            endWindow();\n        } else {\n            document.getElementById('spellbutton').disabled = false;\n        }\n        $(this).dequeue();\n    });\n\n    $(faerbol).queue(function () {\n        faerbol.remove();\n        $(this).dequeue();\n    });\n}\n\nfunction enterName() {\n    if (!enteredNameYet) {\n        users += 1;\n        windowName = document.createElement('div');\n        windowName.style.zIndex = '1';\n        windowName.style.bottom = '0';\n        windowName.style.right = '0';\n        windowName.style.left = '0';\n        windowName.style.top = '0';\n        windowName.style.position = 'absolute';\n        windowName.style.height = '200px';\n        windowName.style.width = '512px';\n        windowName.style.margin = 'auto';\n        windowName.style.backgroundColor = 'black';\n        windowName.style.opacity = '.5';\n        windowName.style.color = 'white';\n        windowName.style.textAlign = 'center';\n        windowName.style.display = 'block';\n        let enterH2 = document.createElement('h2');\n        enterH2.style.fontSize = '3em';\n        enterH2.style.fontFamily = 'sans-serif';\n        enterH2.innerText = \"Enter your name: \";\n        nameArea = document.createElement('textarea');\n        nameArea.setAttribute(\"required\", true);\n        let enterButton = document.createElement('button');\n        enterButton.innerText = \"Enter\";\n        enterButton.style.fontSize = '1.5em';\n        windowName.appendChild(enterH2);\n        windowName.appendChild(nameArea);\n        windowName.appendChild(enterButton);\n        document.body.appendChild(windowName);\n        enterButton.addEventListener('click', function () {\n            if (!nameArea.value.match(/\\w/)) {\n                alert(\"Please enter you nickname to continue!\");\n            } else {\n                enteredNameYet = true;\n                windowName.style.display = 'none';\n                toRun();\n            }\n        });\n    } else {\n        toRun();\n    }\n}\nfunction endWindow() {\n    score += Math.floor((201 - src_hpMonster) / 2);\n    let windowEnd = document.createElement('div');\n    windowEnd.style.zIndex = '1';\n    windowEnd.style.bottom = '0';\n    windowEnd.style.right = '0';\n    windowEnd.style.left = '0';\n    windowEnd.style.top = '0';\n    windowEnd.style.position = 'absolute';\n    windowEnd.style.height = '200px';\n    windowEnd.style.width = '512px';\n    windowEnd.style.margin = 'auto';\n    windowEnd.style.backgroundColor = 'black';\n    windowEnd.style.opacity = '.5';\n    windowEnd.style.color = 'white';\n    windowEnd.style.textAlign = 'center';\n    windowEnd.style.display = 'block';\n    let enterH2 = document.createElement('h2');\n    enterH2.style.fontSize = '3em';\n    enterH2.style.fontFamily = 'sans-serif';\n    if (src_hpMonster === 0) {\n        if (capacity < 3) {\n            capacity += 1;\n        }\n        enterH2.innerText = \"VICTORY\";\n        let NextRoundButton = document.createElement('button');\n        NextRoundButton.innerText = \"NEXT ROUND\";\n        NextRoundButton.style.fontSize = '1.5em';\n        windowEnd.appendChild(enterH2);\n        windowEnd.appendChild(NextRoundButton);\n        NextRoundButton.addEventListener('click', function () {\n            windowEnd.remove();\n            hpGg = 201;\n            src_hpMonster = hpGg;\n            document.getElementById('globalPlayWindow').remove();\n            toRun();\n        });\n    } else {\n        enterH2.innerText = \"GAME OVER!\";\n        let ScorePlace = document.createElement('h3');\n        ScorePlace.innerText = \"Score: \" + score;\n        ScorePlace.style.fontFamily = 'sans-serif';\n        let playAgainButton = document.createElement('button');\n        playAgainButton.innerText = \"PLAY AGAIN\";\n        playAgainButton.style.fontSize = '1.5em';\n        windowEnd.appendChild(enterH2);\n        windowEnd.appendChild(ScorePlace);\n        windowEnd.appendChild(playAgainButton);\n        playAgainButton.addEventListener('click', function () {\n            windowEnd.remove();\n            score -= Math.floor((201 - src_hpMonster) / 2);\n            hpGg = 201;\n            src_hpMonster = hpGg;\n            document.getElementById('globalPlayWindow').remove();\n            toRun();\n        });\n    }\n    let mainMenuButton = document.createElement('button');\n    mainMenuButton.innerText = \"MENU\";\n    mainMenuButton.style.fontSize = '1.5em';\n    windowEnd.appendChild(mainMenuButton);\n    document.body.appendChild(windowEnd);\n    beginGame = false;\n    mainMenuButton.addEventListener('click', function () {\n        if (hpGg === 0) {\n            let cnf = confirm(\"If you exit the menu, the game will start again. Continue?\");\n            if (cnf) {\n                capacity = 1;\n                score = 0;\n                hpGg = 201;\n                src_hpMonster = hpGg;\n                windowEnd.remove();\n                document.getElementById('globalPlayWindow').remove();\n                startMenu.style.display = 'block';\n                document.getElementById('mainaudio').setAttribute('hidden', 'false');\n            }\n        } else if (src_hpMonster === 0) {\n            hpGg = 201;\n            src_hpMonster = hpGg;\n            windowEnd.remove();\n            document.getElementById('globalPlayWindow').remove();\n            startMenu.style.display = 'block';\n            document.getElementById('mainaudio').setAttribute('hidden', 'false');\n        }\n    });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")}]);